// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId      String   @id @default(uuid())
  email       String   @unique
  fullName    String
  username    String   @unique
  phoneNumber String
  dateOfBirth DateTime
  latitude    Decimal? @db.Decimal(9, 6)
  longitude   Decimal? @db.Decimal(9, 6)
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  friends  Friendship[] @relation("UserFriendship")
  friendOf Friendship[] @relation("FriendFriendship")

  messages Message[]

  @@map("users")
}

model Friendship {
  friendshipId String            @id @default(uuid())
  user         User              @relation(fields: [userId], references: [userId], "UserFriendship")
  userId       String
  friend       User              @relation(fields: [friendId], references: [userId], "FriendFriendship")
  friendId     String
  status       FriendshipStatus?
  chatRoomId   String?
  chatRoom     ChatRoom?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt

  @@unique([userId, friendId])
  @@unique([friendId, userId])
  @@map("friendships")
}

enum FriendshipStatus {
  PENDING
  ACCEPTED
}

model ChatRoom {
  chatRoomId String   @id @default(uuid())
  createdAt  DateTime @default(now())

  friendshipId String     @unique
  friendship   Friendship @relation(fields: [friendshipId], references: [friendshipId])

  messages Message[]

  @@map("chat_rooms")
}

model Message {
  messageId String      @id @default(uuid())
  content   String
  type      MessageType
  createdAt DateTime    @default(now())

  senderId String
  sender   User   @relation(fields: [senderId], references: [userId])

  chatRoomId String
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [chatRoomId])

  @@map("messages")
}

enum MessageType {
  TEXT
  IMAGE
  VIDEO
  AUDIO
  LOCATION
}
